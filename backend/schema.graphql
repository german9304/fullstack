type Query {
  users: [User!]!
  posts: [Post!]!
  likes: [Like!]!
  userById(id: String!): User
  userByEmail(email: String!): User
  post(id: String!): Post
  like(id: String!): Like
}

type Mutation {
  signup(usrinpt: UserInput!): User!
  signin(email: String!, password: String!): User!
  signout: Message!
  createPost(pstinpt: PostInput!): Post!
  updatePost(id: String!, text: String!): Post!
  deletePost(id: String!): Post!
  createLike(likeInput: LikeInput!): Like!
}

type Message {
  message: String!
}

input UserInput {
  email: String!
  name: String!
  password: String!
}

input PostInput {
  text: String!
  author: String!
}

input LikeInput {
  user: String!
  post: String!
  quantity: Int!
}

type User {
  id: ID!
  email: String!
  name: String!
  password: String!
  createdAt: Time!
  posts: [Post!]!
  likes: [Like!]!
}

type Post {
  id: ID!
  text: String!
  createdAt: Time!
  updatedAt: Time!
  author: User
  likes: [Like!]!
}

type Like {
  id: ID!
  user: User!
  post: Post!
  createdAt: Time!
  updatedAt: Time!
  quantity: Int
}

scalar Time
