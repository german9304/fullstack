type Query {
  users: [User!]!
  posts: [Post!]!
  likesPost: [LikePost!]!
  likesComment: [LikeComment!]!
  comments: [Comment!]!
  userById(id: String!): User!
  userByEmail(email: String!): User!
  post(id: String!): Post!
  comment(id: String!): Comment!
  like(id: String!, liketype: String!): Like!
  me: User!
}

type Mutation {
  signup(usrinpt: UserInput!): User!
  signin(email: String!, password: String!): User!
  signout: Message!
  createPost(pstinpt: PostInput!, picture: Upload): Post!
  updatePost(id: String!, postinput: UpdatePostInput!, picture: Upload): Post!
  deletePost(id: String!): Post!
  createComment(commentinput: CommentInput!): Comment!
  updateComment(id: String!, body: String!): Comment!
  deleteComment(id: String!): Comment!
  createPostLike(likeinput: PostLikeInput!): Like!
  createCommentLike(likeinput: CommentLikeInput!): Like!
  updateLike(id: String!, quantity: Int!, liketype: String!): Like!
}

type Message {
  message: String!
}

input UpdatePostInput {
  header: String!
  body: String!
}

input UserInput {
  email: String!
  name: String!
  password: String!
}

input PostInput {
  author: String!
  header: String!
  body: String!
}

input LikeInput {
  quantity: Int!
  user: String!
}

input CommentLikeInput {
  likeInfo: LikeInput!
  comment: String!
}

input PostLikeInput {
  likeInfo: LikeInput!
  post: String!
}

input CommentInput {
  body: String!
  user: String!
  post: String!
}

type User {
  id: ID!
  email: String!
  name: String!
  password: String!
  createdAt: Time!
  posts: [Post!]!
  comments: [Comment!]!
  likesPost: [LikePost!]!
  likesComment: [LikeComment!]!
}

type Post {
  id: ID!
  header: String!
  picture: Upload
  body: String!
  createdAt: Time!
  updatedAt: Time!
  author: User!
  comments: [Comment!]!
  likes: [LikePost!]!
}

type Comment {
  id: ID!
  body: String!
  createdAt: Time!
  updatedAt: Time!
  author: User!
  post: Post!
  likes: [LikeComment!]!
}

interface Like {
  id: ID!
  quantity: Int
  user: User!
  createdAt: Time!
  updatedAt: Time!
}

type LikeComment implements Like {
  id: ID!
  quantity: Int
  user: User!
  comment: Comment!
  createdAt: Time!
  updatedAt: Time!
}

type LikePost implements Like {
  id: ID!
  quantity: Int
  user: User!
  post: Post!
  createdAt: Time!
  updatedAt: Time!
}

scalar Time

scalar Upload
